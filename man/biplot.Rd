% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biplot.R
\name{biplot}
\alias{biplot}
\title{Biplot.}
\usage{
biplot(model, zoom = 1, PCi = 1, PCj = 2, optns = list())
}
\arguments{
\item{model}{A PCA or oplsda model.}

\item{zoom}{A double from 0 to 1 for the maximum of the loadings axis. The
default is 1.}

\item{PCi}{A numeric for the component on the x-axis. Default is 1 and cannot
be changed for an OPLS (including DA). This means for an OPLS it will always
be the first predictive component.}

\item{PCj}{A numeric for the component on the y-axis. Default is 2 and cannot
be changed for an OPLS (including DA). This means for OPLS it will always be
the first orthogonal component.}

\item{optns}{An empty list for additional options:
\itemize{
\item{plotTitle} {A character for the title of the plot.}
\item{color} {Either a column from the data frame or a character of the
color desired (example "blue"). Default color is "black". When using on a
ropls object, it must match the quantitative data type (discrete or continuous).}
\item{shape} {Either a column from the data frame (must be discrete) or a
character of the shape desired. Default shape is "circle".}
\item{size} {Either a column from the data frame or a numeric of the size
desired. Default size is 3.}
\item{alpha} {Either a column from the data frame or a numeric of the alpha
desired. Default size is 0.5.}
\item{discretePalette} {Color palette for discrete values, you can assign
colors to specific factors, example:
discretePalette = c("control" = "purple", "treatment" = "orange").
Or supply a concatenated list, example (and the default):
discretePalette = c("#B2182B", "#D6604D", "#F4A582", "#FDDBC7", "#D1E5F0", "#92C5DE", "#4393C3", "#2166AC").
Hexadecimal or color names accepted.}
\item{continuousPalette} {Color palette for continuous values, use
hexadecimal values (example and default:
continuousPalette =c("#0000CC","#0000FF","#0055FF","#00AAFF","#00FFFF",
"#2BFFD5","#55FFAA","#80FF80","#AAFF55","#D4FF2B","#FFFF00","#FFAA00",
"#FF5500","#FF0000","#CC0000")), grDevices names (example:
continousPalette = rainbow(4)) or color names (example :
continuousPalette =c("purple", "orange")).}
\item{theme} {Personalize the plot theme you would like applied as you
would using theme() in ggplot. Example set
theme = theme(legend.position = "left", text = element_text(size=5)).}
\item{extra} {Add extra ggplot arguments that are not for theme(), example
extra = scale_shape_manual(labels = c("A", "B", "C"),values = c(8, 17, 2))}
\item{ellipse} {A character or either "color", "hotellings", "t", or "normal"
depending on desired method of calculation. If using color, a discrete variable
must be supplied to color.}
\item{ci} {Set your own limit for ellipses drawn. The default is ci = 0.95
(95 percent confidence interval).}
\item {colorTitle} {A character of the desired color legend title when \code{color}
is a variable. No color legend will appear if \code{color} is set to a simple
aesthetic such as "green". Default "color".}
\item {shapeTitle} {A character of the desired shape legend title when \code{shape}
is a variable. No shape legend will appear if \code{shape} is set to a simple
aesthetic such as "square". Default "Shape".}
\item {sizeTitle} {A character of the desired shape legend title when \code{size}
is a variable. No size legend will appear if \code{size} is set to a simple
aesthetic such as 2. Default "Size".}
\item {alphaTitle} {A character of the desired alpha legend title when \code{alpha}
is a variable. No size legend will appear if \code{alpha} is set to a simple
aesthetic such as 0.3. Default "Alpha".}
}}
}
\value{
The model with the appended biplot. Under plots for a PCA and in suppLs for
an O-PLS(DA)
}
\description{
A biplot plot for an O-PLS(DA) or PCA model. O-PLS is only available for the
first predictive and first orthogonal component. Displayed PLS components may
be changed. Loadings are displayed as vector arrows. A maximum of 50 features
can be displayed in a biplot. If stored, the plot will append to the model.
}
\examples{
data(iris)
a <- PCA(data = iris[,1:4], center = TRUE, scale. = TRUE)
b <- biplot(model = a,
                PCi = 1,
                PCj = 3,
                zoom = 0.9,
                optns = list(color = iris[,"Species"],
                             discretePalette = c("setosa" = "purple",
                                                 "versicolor" = "orange",
                                                 "virginica" = "steelblue"),
                              colorTitle = "Flower Species",
                              plotTitle = "Iris biplot",
                              alpha = 0.7))

}
