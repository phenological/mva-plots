% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oplsda.R
\name{oplsda}
\alias{oplsda}
\title{oplsda.}
\usage{
oplsda(X, Y, type, optns = list())
}
\arguments{
\item{X}{Numerical data for the model. Matrix or data frame accepted. NA's
accepted since NIPALs is applied.}

\item{Y}{Response to be modeled. Vector, matrix or data frame of either
numeric (O-PLS) or character/factor (O-PLS-DA) response.}

\item{type}{Specify the type of analysis "PLS" or "OPLS". Discriminant
analysis will automatically occur when character/factor is supplied to Y.}

\item{optns}{A list for additional options:
\itemize{
\item{predI}{Default NA (ropls will automatically set the number) for PLS,
default 1 for OPLS. If \code{type} is PLS, you may set your own.}
\item{orthoI}{Default NA (ropls will automatically set the number) for
OPLS, default 0 for PLS. If \code{type} is OPLS, you may set your own.}
\item{crossvalI}{Number of folds in k-fold cross-validation. Default is 7.
You may set your own.}
\item{log10L}{Logical for if the \code{X} should be log10 transformed.
Default is FALSE, can be changed to TRUE.}
\item{permI}{Number of permutations applied for model validation. Default
is 2. Please note, if subset in \code{optns} is changed from NULL,
permutations aren't calculate.}
\item{scaleC}{Default is "standard". Choose from "standard" for
mean-centering and unit variance scaling, "none" for no scaling or
centering, "center" for mean centering only, "pareto" for mean-centering
and Pareto scaling.}
\item{subset}{Default is NULL. Set as vector of observation indices to be
used for training set or "odd" for equal train and test subsets. Equal
subsetting will take into account the classes proportions as training sets
should be representative.}
}}
}
\value{
The ropls object. Please refer to the ropls::opls help for details.
}
\description{
Function that uses ropls::opls to perform O-PLS-DA modelling. Please see the
ropls::opls help for further details.
}
\examples{
data(mtcars)
a <- oplsda(X = mtcars[,1:7], Y = mtcars[,8], type = "PLS", optns = list(permI = 50))
a <- oplsda(X = mtcars[,1:7], Y = mtcars[,8], type = "OPLS", optns = list(permI = 50))
}
